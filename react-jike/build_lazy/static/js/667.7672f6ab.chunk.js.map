{"version":3,"file":"static/js/667.7672f6ab.chunk.js","mappings":"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","sources":["apis/article.js","hooks/useChannel.jsx","pages/Article/index.jsx"],"sourcesContent":["import { request } from '@/utils'\n\nexport const fetchCreeateArticlesApi = (data) => {\n  return request({\n    method: 'POST',\n    url: '/mp/articles?draft=true',\n    data,\n  })\n}\n\nexport const fetchChannelsApi = () => {\n  return request({\n    method: 'GET',\n    url: '/channels',\n  })\n}\n\nexport const getArticleListAPI = (params = {}) => {\n  return request({\n    method: 'GET',\n    url: '/mp/articles',\n    params,\n  })\n}\nexport const delArticleAPI = (id) => {\n  return request({\n    method: 'DELETE',\n    url: `/mp/articles/${id}`,\n  })\n}\nexport const getArticleAPI = (id) => {\n  return request({\n    method: 'GET',\n    url: `/mp/articles/${id}`,\n  })\n}\nexport const updateArticleAPI = (id, data) => {\n  return request({\n    method: 'PUT',\n    url: `/mp/articles/${id}?draft=true`,\n    data,\n  })\n}","import { useState, useEffect } from 'react'\nimport { fetchChannelsApi } from '@/apis/article'\n\n\nconst useChannel = () => {\n  const [ channels, setChannels ] = useState([])\n\n  useEffect(() => {\n    fetchChannelsApi().then(res => {\n      console.log(res);\n      setChannels(res.data.data.channels)\n    })\n  }, [])\n\n  return { channels }\n}\n\nexport {\n  useChannel\n}","import { Link, useNavigate } from 'react-router-dom'\nimport { Card, Breadcrumb, Form, Button, Radio, DatePicker, Select, Table, Tag, Space } from 'antd'\nimport { EditOutlined, DeleteOutlined } from '@ant-design/icons'\nimport { useChannel } from '@/hooks/useChannel'\nimport { getArticleListAPI, delArticleAPI } from '@/apis/article'\nimport { useEffect, useState } from 'react'\nimport img404 from '@/assets/error.png'\nimport locale from 'antd/es/date-picker/locale/zh_CN'\n\nconst { Option } = Select\nconst { RangePicker } = DatePicker\n\nconst Article = () => {\n  const pageSize = 5\n  const navigate = useNavigate()\n  const { channels } = useChannel()\n  const [ data, setData ] = useState([])\n  const [ count, setCount ] = useState(0)\n  const [ formData, setFormData ] = useState({\n    status: '',\n    channel_id: '',\n    begin_pubdate: '',\n    end_pubdate: '',\n    page: '',\n    per_page: pageSize\n  })\n  // 准备列数据\n  const columns = [\n    {\n      title: '封面',\n      dataIndex: 'cover',\n      width: 120,\n      render: cover => {\n        return <img src={cover.images[0] || img404} width={80} height={60} alt=\"\" />\n      }\n    },\n    {\n      title: '标题',\n      dataIndex: 'title',\n      width: 220\n    },\n    {\n      title: '状态',\n      dataIndex: 'status',\n      render: data => {\n        switch (data) {\n          case 0:\n            return <Tag color=\"green\">草稿</Tag>\n          case 1:\n            return <Tag color=\"green\">待审核</Tag>\n          case 2:\n            return <Tag color=\"green\">审核通过</Tag>\n          default:\n            break;\n        }\n      }\n    },\n    {\n      title: '发布时间',\n      dataIndex: 'pubdate'\n    },\n    {\n      title: '阅读数',\n      dataIndex: 'read_count'\n    },\n    {\n      title: '评论数',\n      dataIndex: 'comment_count'\n    },\n    {\n      title: '点赞数',\n      dataIndex: 'like_count'\n    },\n    {\n      title: '操作',\n      render: data => {\n        return (\n          <Space size=\"middle\">\n            <Button type=\"primary\" shape=\"circle\" icon={<EditOutlined />} onClick={ handleEdit(data.id) } />\n            <Button\n              type=\"primary\"\n              danger\n              shape=\"circle\"\n              onClick={ handleDelete(data.id) }\n              icon={<DeleteOutlined />}\n            />\n          </Space>\n        )\n      }\n    }\n  ]\n\n  function handleDelete(id) {\n    console.log('handleDelete');\n    return async () => {\n      await delArticleAPI(id)\n      setFormData({\n        ...formData,\n        page: 1\n      })\n    }\n  }\n\n  function handleEdit(id) {\n    return () => {\n      navigate(`/layout/publish?id=${id}`)\n    }\n  }\n\n  function handleFinish(values) {\n    setFormData({\n      ...values,\n      begin_pubdate: values.date[0].format('YYYY-MM-DD'),\n      end_pubdate: values.date[1].format('YYYY-MM-DD')\n    })\n  }\n\n  function handlePaginationChange(page) {\n    console.log('page-----------', page);\n    setFormData({\n      ...formData,\n      page,\n    })\n  }\n\n  useEffect(() => {\n    async function getList() {\n      const res = await getArticleListAPI(formData)\n      setData(res.data.data.results)\n      setCount(res.data.data.total_count)\n    }\n    getList()\n  }, [formData])\n\n  return (\n    <div>\n      <Card\n        title={\n          <Breadcrumb items={[\n            { title: <Link to={'/'}>首页</Link> },\n            { title: '文章列表' },\n          ]} />\n        }\n        style={{ marginBottom: 20 }}\n      >\n        <Form initialValues={{ status: '' }} onFinish={handleFinish} >\n          <Form.Item label=\"状态\" name=\"status\">\n            <Radio.Group>\n              <Radio value={''}>全部</Radio>\n              <Radio value={0}>草稿</Radio>\n              <Radio value={2}>审核通过</Radio>\n            </Radio.Group>\n          </Form.Item>\n\n          <Form.Item label=\"频道\" name=\"channel_id\">\n            <Select\n              placeholder=\"请选择文章频道\"\n              style={{ width: 120 }}\n            >\n              {\n                channels.map(item => <Option key={item.id} value={item.id}>{ item.name }</Option>)\n              }\n            </Select>\n          </Form.Item>\n\n          <Form.Item label=\"日期\" name=\"date\">\n            {/* 传入locale属性 控制中文显示*/}\n            <RangePicker locale={locale}></RangePicker>\n          </Form.Item>\n\n          <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\" style={{ marginLeft: 40 }}>\n              筛选\n            </Button>\n          </Form.Item>\n        </Form>\n      </Card>\n      {/*        */}\n      <Card title={`根据筛选条件共查询到 ${ count } 条结果：`}>\n        <Table rowKey=\"id\" columns={columns} dataSource={data} pagination={{\n          pageSize: pageSize,\n          total: count,\n          onChange: handlePaginationChange\n        }} />\n      </Card>\n    </div>\n  )\n}\n\nexport default Article"],"names":["fetchCreeateArticlesApi","data","request","method","url","fetchChannelsApi","getArticleListAPI","params","arguments","length","undefined","delArticleAPI","id","concat","getArticleAPI","useChannel","channels","setChannels","useState","useEffect","then","res","console","log","Option","Select","RangePicker","DatePicker","Article","navigate","useNavigate","setData","count","setCount","formData","setFormData","status","channel_id","begin_pubdate","end_pubdate","page","per_page","columns","title","dataIndex","width","render","cover","_jsx","src","images","height","alt","Tag","color","children","_jsxs","Space","size","Button","type","shape","icon","EditOutlined","onClick","danger","handleDelete","DeleteOutlined","async","results","total_count","getList","Card","Breadcrumb","items","Link","to","style","marginBottom","Form","initialValues","onFinish","values","date","format","Item","label","name","Radio","value","placeholder","map","item","locale","htmlType","marginLeft","Table","rowKey","dataSource","pagination","pageSize","total","onChange"],"sourceRoot":""}